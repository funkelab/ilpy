# https://peps.python.org/pep-0517
[build-system]
requires = ["setuptools==71.1.0", "Cython"]
build-backend = "setuptools.build_meta"

# https://peps.python.org/pep-0621/
[project]
name = "ilpy"
description = "Python wrappers for popular MIP solvers."
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { email = "funkej@janelia.hhmi.org", name = "Jan Funke" },
    { email = "talley.lambert@gmail.com", name = "Talley Lambert" },
]
dynamic = ["version", "readme"]
# these are required... but hard to install from pypi
# we list them here for completeness, but it's up to the user to install them :(
dependencies = [
    # "gurobi==11.0.3",
    # "scip==9.1.0",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
dev = [
    "cython",
    "gurobipy==11.0.3; sys_platform!='windows' and python_version<'3.12'", # used to confirm equality of results
    "ipython",
    "mypy",
    "numpy",
    "pre-commit",
    "pytest-cov",
    "pytest",
    "ruff",
    "setuptools==71.1.0",
]
docs = ["sphinx", "sphinx_rtd_theme", "sphinx-autodoc-typehints"]

[project.urls]
homepage = "https://github.com/funkelab/ilpy"
repository = "https://github.com/funkelab/ilpy"

[tool.setuptools]
packages = ["ilpy"]
package-data = { "ilpy" = ["py.typed", "*.pyi"] }

[tool.setuptools.dynamic]
version = { attr = "ilpy.__version__" }
readme = { file = ["README.md"] }

# https://beta.ruff.rs/docs
[tool.ruff]
target-version = "py39"
src = ["ilpy"]

[tool.ruff.lint]
select = [
    "F",   # pyflakes
    "W",   # pyflakes
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade 
    "RUF", # ruff specific rules
]

[tool.mypy]
files = "ilpy"
strict = true                 # feel free to relax this if it's annoying
disallow_any_generics = false
ignore_missing_imports = true

# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
]
[tool.coverage.run]
source = ['ilpy']
plugins = ["Cython.Coverage"]
